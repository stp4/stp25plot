% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8-forest_plot.R
\name{forest_plot}
\alias{forest_plot}
\alias{forest_plot.data.frame}
\alias{forest_plot.default}
\alias{prepare_forest}
\alias{prepare_forest1}
\title{forest_plot}
\usage{
forest_plot(x, ...)

\method{forest_plot}{data.frame}(
  x,
  main = NULL,
  include.gof = NULL,
  replace.lable.dots = TRUE,
  scale.log = FALSE,
  plot = TRUE,
  ...
)

\method{forest_plot}{default}(
  x,
  data = insight::get_data(x),
  main = NULL,
  include.indercept = TRUE,
  include.referenze = TRUE,
  include.gof = TRUE,
  include.label = FALSE,
  replace.lable.dots = TRUE,
  standardize = FALSE,
  scale.log = FALSE,
  plot = TRUE,
  ...
)

prepare_forest(
  ...,
  names = NULL,
  standardize = FALSE,
  include.indercept = TRUE,
  include.referenze = TRUE,
  include.label = FALSE,
  group_name = "group"
)

prepare_forest1(
  x,
  data = insight::get_data(x),
  main = NULL,
  include.indercept = TRUE,
  include.referenze = include.referenze,
  include.label = FALSE,
  standardize = FALSE,
  scale.log = FALSE
)
}
\arguments{
\item{x}{fit}

\item{...}{model-fits}

\item{main}{Beschriftung}

\item{scale.log}{fuer die Beschriftung}

\item{data}{data}

\item{include.indercept}{logical}

\item{include.label}{logical or character}

\item{standardize}{parameters::model_parameters:  The method used for standardizing the 
parameters. Can be NULL (default; no standardization), 
"refit" (for re-fitting the model on standardized data) 
or one of "basic", "posthoc", "smart", "pseudo".}

\item{names}{name}

\item{group_name}{Variable name of trhe group}
}
\value{
ggplot

data.frame

data.frame
main effect
Es fehlen noch die N 
sowie die Referenz ist noch nicht vorhanden

am Ende $  
aber name kann auch bei factoren dazischen liegen
}
\description{
Gestohlen von survminer::ggforest()

prepare_forest Extrahiere Parameter
}
\examples{
set.seed(1)
n <- 10 * 2 * 3
dat <- data.frame(
  y = rnorm(n),
  sex = gl(2, n / 2, labels = c("male", "female")),
  rx = gl(3, n / 3, labels = c("Obs",  "Tev", "Tev+5FU")),
  age = 1:n,
  bmi = rnorm(n )
)
dat <- transform(dat,
                 y = y + 
                   as.numeric(sex) / 2 + 
                   as.numeric(rx) 
)


fit1 <- lm(y ~ sex + rx  ,  dat)
fit2 <- lm(y ~ sex + rx + age * bmi,  dat)

forest_plot(fit1, plot=T)
forest_plot(fit1, plot=F)
forest_plot(fit1, plot="ggplot_forest", main="Hallo")
prepare_forest(fit2)
ggplot_forest( prepare_forest(fit1,fit2) )+
ggforce::facet_col(
    facets = ~group,
    scales = "free_y",
    space = "free"
  )
  
 ggplot_table(prepare_forest(fit1))

fit1 <- lm(y ~ sex + rx + age + bmi,  dat)
forest_plot(fit1, standardize = TRUE)

# require(surv)
# require(survminer)
 require(survival)
 require(stpvers)

forest_plot(glm(status ~ sex + rx + adhere,
data = colon, family = binomial()))
#forest_plot(coxph(Surv(time, status) ~ sex + rx + adhere,
#             data = colon), data=colon)




model1 <- lm(mpg ~ wt, data = mtcars)
model2 <- lm(mpg ~ wt + cyl, data = mtcars)
prepare_forest(model1, model12)

}
